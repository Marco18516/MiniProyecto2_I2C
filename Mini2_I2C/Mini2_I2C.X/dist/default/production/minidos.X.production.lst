

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 16:13:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	strings
   460  040A                     __pstrings:
   461  040A                     stringtab:
   462  040A                     __stringtab:
   463  040A                     stringcode:	
   464                           ;	String table - string pointers are 1 byte each
   465                           
   466  040A                     stringdir:
   467  040A  3004               	movlw	high stringdir
   468  040B  008A               	movwf	10
   469  040C  0804               	movf	4,w
   470  040D  0A84               	incf	4,f
   471  040E  0782               	addwf	2,f
   472  040F                     __stringbase:
   473  040F  3400               	retlw	0
   474  0410                     __end_of__stringtab:
   475  0410                     _dpowers:
   476  0410  3401               	retlw	1
   477  0411  3400               	retlw	0
   478  0412  340A               	retlw	10
   479  0413  3400               	retlw	0
   480  0414  3464               	retlw	100
   481  0415  3400               	retlw	0
   482  0416  34E8               	retlw	232
   483  0417  3403               	retlw	3
   484  0418  3410               	retlw	16
   485  0419  3427               	retlw	39
   486  041A                     __end_of_dpowers:
   487  0013                     _SSPBUF	set	19
   488  0014                     _SSPCON	set	20
   489  0006                     _PORTB	set	6
   490  0019                     _TXREG	set	25
   491  000B                     _INTCONbits	set	11
   492  0008                     _PORTDbits	set	8
   493  001A                     _RCREG	set	26
   494  000C                     _PIR1bits	set	12
   495  0063                     _SSPIF	set	99
   496  0065                     _RCIF	set	101
   497  00C7                     _SPEN	set	199
   498  0042                     _RD2	set	66
   499  0093                     _SSPADD	set	147
   500  0094                     _SSPSTAT	set	148
   501  0091                     _SSPCON2	set	145
   502  0099                     _SPBRG	set	153
   503  008C                     _PIE1bits	set	140
   504  0088                     _TRISD	set	136
   505  0086                     _TRISB	set	134
   506  04A0                     _BF	set	1184
   507  048B                     _RCEN	set	1163
   508  048E                     _ACKSTAT	set	1166
   509  048C                     _ACKEN	set	1164
   510  048D                     _ACKDT	set	1165
   511  048A                     _PEN	set	1162
   512  0489                     _RSEN	set	1161
   513  0488                     _SEN	set	1160
   514  043C                     _TRISC4	set	1084
   515  043B                     _TRISC3	set	1083
   516  04C1                     _TRMT	set	1217
   517  04C5                     _TXEN	set	1221
   518  043F                     _TRISC7	set	1087
   519  043E                     _TRISC6	set	1086
   520  04C4                     _SYNC	set	1220
   521  04C2                     _BRGH	set	1218
   522  0442                     _TRISD2	set	1090
   523  0189                     _ANSELH	set	393
   524  041A                     STR_1:
   525  041A  3420               	retlw	32	;' '
   526  041B  3441               	retlw	65	;'A'
   527  041C  3479               	retlw	121	;'y'
   528  041D  3420               	retlw	32	;' '
   529  041E  343D               	retlw	61	;'='
   530  041F  3420               	retlw	32	;' '
   531  0420  3425               	retlw	37	;'%'
   532  0421  3464               	retlw	100	;'d'
   533  0422  3420               	retlw	32	;' '
   534  0423  3420               	retlw	32	;' '
   535  0424  3420               	retlw	32	;' '
   536  0425  3420               	retlw	32	;' '
   537  0426  3400               	retlw	0
   538                           
   539                           	psect	cinit
   540  000F                     start_initialization:	
   541                           ; #config settings
   542                           
   543  000F                     __initialization:
   544                           
   545                           ; Clear objects allocated to COMMON
   546  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   547  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   548  0011                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551  0011                     __end_of__initialization:
   552  0011  0183               	clrf	3
   553  0012  120A  118A  2BB5   	ljmp	_main	;jump to C main() function
   554                           
   555                           	psect	bssCOMMON
   556  0078                     __pbssCOMMON:
   557  0078                     _LED:
   558  0078                     	ds	2
   559                           
   560                           	psect	cstackBANK1
   561  00A0                     __pcstackBANK1:
   562  00A0                     MPU6050_Read@buffer:
   563                           
   564                           ; 40 bytes @ 0x0
   565  00A0                     	ds	52
   566  00D4                     MPU6050_Read@Ay:
   567                           
   568                           ; 2 bytes @ 0x34
   569  00D4                     	ds	2
   570                           
   571                           	psect	cstackCOMMON
   572  0070                     __pcstackCOMMON:
   573  0070                     ?_INTERRUP:
   574  0070                     ?_UART_TX_Init:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_MPU6050_Init:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_MPU6050_Read:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_I2C_Master_Init:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_I2C_Start:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_I2C_Master_Write:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_I2C_Master_Stop:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_I2C_Read:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_ISR:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ??_ISR:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_UART_Write:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_I2C_Master_Wait:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_I2C_ACK:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_I2C_NACK:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621  0070                     	ds	4
   622  0074                     ??_INTERRUP:
   623  0074                     ??_UART_TX_Init:	
   624                           ; 1 bytes @ 0x4
   625                           
   626  0074                     ??_I2C_Master_Init:	
   627                           ; 1 bytes @ 0x4
   628                           
   629  0074                     ??_I2C_Master_Write:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0074                     ??_I2C_Master_Stop:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0074                     ??_I2C_Read:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0074                     ??_UART_Write:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0074                     ??_I2C_Master_Wait:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0074                     ??_I2C_ACK:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ??_I2C_NACK:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ?___awdiv:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ?___lwdiv:	
   654                           ; 2 bytes @ 0x4
   655                           
   656  0074                     UART_Write@data:	
   657                           ; 2 bytes @ 0x4
   658                           
   659  0074                     I2C_Master_Write@data:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___awdiv@divisor:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ___lwdiv@divisor:	
   666                           ; 2 bytes @ 0x4
   667                           
   668                           
   669                           ; 2 bytes @ 0x4
   670  0074                     	ds	1
   671  0075                     ??_I2C_Start:
   672  0075                     ?_UART_Write_String:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0075                     I2C_Start@add:	
   676                           ; 1 bytes @ 0x5
   677                           
   678  0075                     I2C_Read@ACK_NACK:	
   679                           ; 1 bytes @ 0x5
   680                           
   681  0075                     UART_Write_String@buf:	
   682                           ; 1 bytes @ 0x5
   683                           
   684                           
   685                           ; 2 bytes @ 0x5
   686  0075                     	ds	1
   687  0076                     I2C_Read@Data:
   688  0076                     ___awdiv@dividend:	
   689                           ; 1 bytes @ 0x6
   690                           
   691  0076                     ___lwdiv@dividend:	
   692                           ; 2 bytes @ 0x6
   693                           
   694                           
   695                           ; 2 bytes @ 0x6
   696  0076                     	ds	2
   697                           
   698                           	psect	cstackBANK0
   699  0020                     __pcstackBANK0:
   700  0020                     ??_MPU6050_Init:
   701  0020                     ??_UART_Write_String:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0020                     ??___awdiv:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     ??___lwdiv:	
   708                           ; 1 bytes @ 0x0
   709                           
   710                           
   711                           ; 1 bytes @ 0x0
   712  0020                     	ds	1
   713  0021                     ___awdiv@counter:
   714  0021                     ___lwdiv@counter:	
   715                           ; 1 bytes @ 0x1
   716                           
   717                           
   718                           ; 1 bytes @ 0x1
   719  0021                     	ds	1
   720  0022                     ___awdiv@sign:
   721  0022                     UART_Write_String@i:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0022                     ___lwdiv@quotient:	
   725                           ; 2 bytes @ 0x2
   726                           
   727                           
   728                           ; 2 bytes @ 0x2
   729  0022                     	ds	1
   730  0023                     ___awdiv@quotient:
   731                           
   732                           ; 2 bytes @ 0x3
   733  0023                     	ds	1
   734  0024                     ?___lwmod:
   735  0024                     ___lwmod@divisor:	
   736                           ; 2 bytes @ 0x4
   737                           
   738                           
   739                           ; 2 bytes @ 0x4
   740  0024                     	ds	2
   741  0026                     ___lwmod@dividend:
   742                           
   743                           ; 2 bytes @ 0x6
   744  0026                     	ds	2
   745  0028                     ??___lwmod:
   746                           
   747                           ; 1 bytes @ 0x8
   748  0028                     	ds	1
   749  0029                     ___lwmod@counter:
   750                           
   751                           ; 1 bytes @ 0x9
   752  0029                     	ds	1
   753  002A                     ?_sprintf:
   754  002A                     sprintf@f:	
   755                           ; 2 bytes @ 0xA
   756                           
   757                           
   758                           ; 1 bytes @ 0xA
   759  002A                     	ds	3
   760  002D                     ??_sprintf:
   761                           
   762                           ; 1 bytes @ 0xD
   763  002D                     	ds	3
   764  0030                     sprintf@ap:
   765                           
   766                           ; 1 bytes @ 0x10
   767  0030                     	ds	1
   768  0031                     sprintf@flag:
   769                           
   770                           ; 1 bytes @ 0x11
   771  0031                     	ds	1
   772  0032                     sprintf@prec:
   773                           
   774                           ; 1 bytes @ 0x12
   775  0032                     	ds	1
   776  0033                     sprintf@val:
   777                           
   778                           ; 2 bytes @ 0x13
   779  0033                     	ds	2
   780  0035                     sprintf@sp:
   781                           
   782                           ; 1 bytes @ 0x15
   783  0035                     	ds	1
   784  0036                     sprintf@c:
   785                           
   786                           ; 1 bytes @ 0x16
   787  0036                     	ds	1
   788  0037                     ??_MPU6050_Read:
   789                           
   790                           ; 1 bytes @ 0x17
   791  0037                     	ds	4
   792  003B                     ??_main:
   793                           
   794                           ; 1 bytes @ 0x1B
   795  003B                     	ds	2
   796                           
   797                           	psect	maintext
   798  03B5                     __pmaintext:	
   799 ;;
   800 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   801 ;;
   802 ;; *************** function _main *****************
   803 ;; Defined at:
   804 ;;		line 58 in file "main.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : B00/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0
   820 ;;      Temps:          0       2       0       0       0
   821 ;;      Totals:         0       2       0       0       0
   822 ;;Total ram usage:        2 bytes
   823 ;; Hardware stack levels required when called:    5
   824 ;; This function calls:
   825 ;;		_INTERRUP
   826 ;;		_MPU6050_Init
   827 ;;		_MPU6050_Read
   828 ;;		_UART_TX_Init
   829 ;; This function is called by:
   830 ;;		Startup code after reset
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _main
   836  03B5                     _main:
   837  03B5                     l1827:	
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   840                           
   841                           
   842                           ;main.c: 59:     INTERRUP();
   843  03B5  120A  118A  2497  120A  118A  	fcall	_INTERRUP
   844  03BA                     l1829:
   845                           
   846                           ;main.c: 60:     UART_TX_Init();
   847  03BA  120A  118A  2447  120A  118A  	fcall	_UART_TX_Init
   848  03BF                     l1831:
   849                           
   850                           ;main.c: 61:     TRISD2 = 0;
   851  03BF  1683               	bsf	3,5	;RP0=1, select bank1
   852  03C0  1303               	bcf	3,6	;RP1=0, select bank1
   853  03C1  1108               	bcf	8,2	;volatile
   854  03C2                     l1833:
   855                           
   856                           ;main.c: 62:     TRISB = 0;
   857  03C2  0186               	clrf	6	;volatile
   858  03C3                     l1835:
   859                           
   860                           ;main.c: 63:     TRISD = 0;
   861  03C3  0188               	clrf	8	;volatile
   862  03C4                     l1837:
   863                           
   864                           ;main.c: 64:     ANSELH = 0;
   865  03C4  1683               	bsf	3,5	;RP0=1, select bank3
   866  03C5  1703               	bsf	3,6	;RP1=1, select bank3
   867  03C6  0189               	clrf	9	;volatile
   868  03C7                     l1839:
   869                           
   870                           ;main.c: 66:     MPU6050_Init();
   871  03C7  120A  118A  21C2  120A  118A  	fcall	_MPU6050_Init
   872  03CC                     l1841:
   873                           
   874                           ;main.c: 71:  {;main.c: 72:         RD2 = ~RD2;
   875  03CC  3004               	movlw	4
   876  03CD  1283               	bcf	3,5	;RP0=0, select bank0
   877  03CE  1303               	bcf	3,6	;RP1=0, select bank0
   878  03CF  0688               	xorwf	8,f
   879  03D0                     l1843:
   880                           
   881                           ;main.c: 73:         MPU6050_Read();
   882  03D0  120A  118A  20FF  120A  118A  	fcall	_MPU6050_Read
   883  03D5                     l1845:
   884                           
   885                           ;main.c: 74:         _delay((unsigned long)((50)*(8000000/4000.0)));
   886  03D5  3082               	movlw	130
   887  03D6  1283               	bcf	3,5	;RP0=0, select bank0
   888  03D7  1303               	bcf	3,6	;RP1=0, select bank0
   889  03D8  00BC               	movwf	??_main+1
   890  03D9  30DD               	movlw	221
   891  03DA  00BB               	movwf	??_main
   892  03DB                     u1307:
   893  03DB  0BBB               	decfsz	??_main,f
   894  03DC  2BDB               	goto	u1307
   895  03DD  0BBC               	decfsz	??_main+1,f
   896  03DE  2BDB               	goto	u1307
   897  03DF  2BCC               	goto	l1841
   898  03E0  120A  118A  280C   	ljmp	start
   899  03E3                     __end_of_main:
   900                           
   901                           	psect	text1
   902  0447                     __ptext1:	
   903 ;; *************** function _UART_TX_Init *****************
   904 ;; Defined at:
   905 ;;		line 15 in file "USART.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _UART_TX_Init
   935  0447                     _UART_TX_Init:
   936  0447                     l1045:	
   937                           ;incstack = 0
   938                           ; Regs used in _UART_TX_Init: [wreg]
   939                           
   940                           
   941                           ;USART.c: 17:   BRGH = 0;
   942  0447  1683               	bsf	3,5	;RP0=1, select bank1
   943  0448  1303               	bcf	3,6	;RP1=0, select bank1
   944  0449  1118               	bcf	24,2	;volatile
   945  044A                     l1047:
   946                           
   947                           ;USART.c: 18:   SPBRG = 12;
   948  044A  300C               	movlw	12
   949  044B  0099               	movwf	25	;volatile
   950  044C                     l1049:
   951                           
   952                           ;USART.c: 20:   SYNC = 0;
   953  044C  1218               	bcf	24,4	;volatile
   954  044D                     l1051:
   955                           
   956                           ;USART.c: 21:   SPEN = 1;
   957  044D  1283               	bcf	3,5	;RP0=0, select bank0
   958  044E  1303               	bcf	3,6	;RP1=0, select bank0
   959  044F  1798               	bsf	24,7	;volatile
   960  0450                     l1053:
   961                           
   962                           ;USART.c: 23:   TRISC6 = 1;
   963  0450  1683               	bsf	3,5	;RP0=1, select bank1
   964  0451  1303               	bcf	3,6	;RP1=0, select bank1
   965  0452  1707               	bsf	7,6	;volatile
   966  0453                     l1055:
   967                           
   968                           ;USART.c: 24:   TRISC7 = 1;
   969  0453  1787               	bsf	7,7	;volatile
   970  0454                     l1057:
   971                           
   972                           ;USART.c: 25:   TXEN = 1;
   973  0454  1698               	bsf	24,5	;volatile
   974  0455                     l81:
   975  0455  0008               	return
   976  0456                     __end_of_UART_TX_Init:
   977                           
   978                           	psect	text2
   979  00FF                     __ptext2:	
   980 ;; *************** function _MPU6050_Read *****************
   981 ;; Defined at:
   982 ;;		line 60 in file "MPU.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  buffer         40    0[BANK1 ] unsigned char [40]
   987 ;;  Ay              2   52[BANK1 ] int 
   988 ;;  Gz              2    0        int 
   989 ;;  Gy              2    0        int 
   990 ;;  Gx              2    0        int 
   991 ;;  T               2    0        int 
   992 ;;  Az              2    0        int 
   993 ;;  Ax              2    0        int 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         0       0      54       0       0
  1005 ;;      Temps:          0       4       0       0       0
  1006 ;;      Totals:         0       4      54       0       0
  1007 ;;Total ram usage:       58 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    4
  1010 ;; This function calls:
  1011 ;;		_I2C_Master_Stop
  1012 ;;		_I2C_Master_Write
  1013 ;;		_I2C_Read
  1014 ;;		_I2C_Start
  1015 ;;		_UART_Write_String
  1016 ;;		___awdiv
  1017 ;;		_sprintf
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _MPU6050_Read
  1025  00FF                     _MPU6050_Read:
  1026  00FF                     l1805:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1029                           
  1030                           
  1031                           ;MPU.c: 62:   char buffer[40];;MPU.c: 63:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU.c: 65:   I2C_St
      +                          art(0xD0);
  1032  00FF  30D0               	movlw	208
  1033  0100  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  1034                           
  1035                           ;MPU.c: 66:   I2C_Master_Write(0x3B);
  1036  0105  303B               	movlw	59
  1037  0106  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  1038                           
  1039                           ;MPU.c: 67:   I2C_Master_Stop();
  1040  010B  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  1041                           
  1042                           ;MPU.c: 68:   I2C_Start(0xD1);
  1043  0110  30D1               	movlw	209
  1044  0111  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  1045  0116                     l1807:
  1046  0116  3000               	movlw	0
  1047  0117  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1048  011C  3000               	movlw	0
  1049  011D  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1050  0122                     l1809:
  1051                           
  1052                           ;MPU.c: 70:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1053  0122  3000               	movlw	0
  1054  0123  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1055  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1057  012A  00B7               	movwf	??_MPU6050_Read
  1058  012B  01B8               	clrf	??_MPU6050_Read+1
  1059  012C  3000               	movlw	0
  1060  012D  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1061  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0134  00B9               	movwf	??_MPU6050_Read+2
  1064  0135  01BA               	clrf	??_MPU6050_Read+3
  1065  0136  0839               	movf	??_MPU6050_Read+2,w
  1066  0137  00BA               	movwf	??_MPU6050_Read+3
  1067  0138  01B9               	clrf	??_MPU6050_Read+2
  1068  0139  0837               	movf	??_MPU6050_Read,w
  1069  013A  0439               	iorwf	??_MPU6050_Read+2,w
  1070  013B  1683               	bsf	3,5	;RP0=1, select bank1
  1071  013C  1303               	bcf	3,6	;RP1=0, select bank1
  1072  013D  00D4               	movwf	MPU6050_Read@Ay^(0+128)
  1073  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1074  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0140  0838               	movf	??_MPU6050_Read+1,w
  1076  0141  043A               	iorwf	??_MPU6050_Read+3,w
  1077  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1078  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1079  0144  00D5               	movwf	(MPU6050_Read@Ay+1)^(0+128)
  1080  0145                     l1811:
  1081  0145  3000               	movlw	0
  1082  0146  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1083  014B  3000               	movlw	0
  1084  014C  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1085  0151                     l1813:
  1086  0151  3000               	movlw	0
  1087  0152  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1088  0157  3000               	movlw	0
  1089  0158  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1090  015D                     l1815:
  1091  015D  3000               	movlw	0
  1092  015E  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1093  0163  3000               	movlw	0
  1094  0164  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1095  0169                     l1817:
  1096  0169  3000               	movlw	0
  1097  016A  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1098  016F  3000               	movlw	0
  1099  0170  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1100  0175                     l1819:
  1101  0175  3000               	movlw	0
  1102  0176  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1103  017B  3001               	movlw	1
  1104  017C  120A  118A  23E3  120A  118A  	fcall	_I2C_Read
  1105  0181                     l1821:
  1106                           
  1107                           ;MPU.c: 76:   I2C_Master_Stop();
  1108  0181  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  1109  0186                     l1823:
  1110                           
  1111                           ;MPU.c: 78:   PORTB = (Ay+16384)/128;
  1112  0186  3080               	movlw	128
  1113  0187  00F4               	movwf	___awdiv@divisor
  1114  0188  3000               	movlw	0
  1115  0189  00F5               	movwf	___awdiv@divisor+1
  1116  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1117  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1118  018C  0854               	movf	MPU6050_Read@Ay^(0+128),w
  1119  018D  3E00               	addlw	0
  1120  018E  00F6               	movwf	___awdiv@dividend
  1121  018F  0855               	movf	(MPU6050_Read@Ay+1)^(0+128),w
  1122  0190  1803               	skipnc
  1123  0191  3E01               	addlw	1
  1124  0192  3E40               	addlw	64
  1125  0193  00F7               	movwf	___awdiv@dividend+1
  1126  0194  120A  118A  2261  120A  118A  	fcall	___awdiv
  1127  0199  0874               	movf	?___awdiv,w
  1128  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1129  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1130  019C  0086               	movwf	6	;volatile
  1131  019D                     l1825:
  1132                           
  1133                           ;MPU.c: 84:   sprintf(buffer," Ay = %d    ",Ay);
  1134  019D  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1135  019E  00B7               	movwf	??_MPU6050_Read
  1136  019F  0837               	movf	??_MPU6050_Read,w
  1137  01A0  00AA               	movwf	sprintf@f
  1138  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1139  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1140  01A3  0855               	movf	(MPU6050_Read@Ay+1)^(0+128),w
  1141  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1142  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1143  01A6  00AC               	movwf	?_sprintf+2
  1144  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  1145  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  1146  01A9  0854               	movf	MPU6050_Read@Ay^(0+128),w
  1147  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1148  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1149  01AC  00AB               	movwf	?_sprintf+1
  1150  01AD  30A0               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1151  01AE  120A  118A  2015  120A  118A  	fcall	_sprintf
  1152                           
  1153                           ;MPU.c: 85:   UART_Write_String(PORTB);
  1154  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1155  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1156  01B5  0806               	movf	6,w	;volatile
  1157  01B6  00B7               	movwf	??_MPU6050_Read
  1158  01B7  01B8               	clrf	??_MPU6050_Read+1
  1159  01B8  0837               	movf	??_MPU6050_Read,w
  1160  01B9  00F5               	movwf	UART_Write_String@buf
  1161  01BA  0838               	movf	??_MPU6050_Read+1,w
  1162  01BB  00F6               	movwf	UART_Write_String@buf+1
  1163  01BC  120A  118A  2382  120A  118A  	fcall	_UART_Write_String
  1164  01C1                     l123:
  1165  01C1  0008               	return
  1166  01C2                     __end_of_MPU6050_Read:
  1167                           
  1168                           	psect	text3
  1169  0015                     __ptext3:	
  1170 ;; *************** function _sprintf *****************
  1171 ;; Defined at:
  1172 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  sp              1    wreg     PTR unsigned char 
  1175 ;;		 -> MPU6050_Read@buffer(40), 
  1176 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1177 ;;		 -> STR_1(13), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1180 ;;		 -> MPU6050_Read@buffer(40), 
  1181 ;;  tmpval          4    0        struct .
  1182 ;;  val             2   19[BANK0 ] unsigned int 
  1183 ;;  cp              2    0        PTR const unsigned char 
  1184 ;;  len             2    0        unsigned int 
  1185 ;;  c               1   22[BANK0 ] unsigned char 
  1186 ;;  prec            1   18[BANK0 ] char 
  1187 ;;  flag            1   17[BANK0 ] unsigned char 
  1188 ;;  ap              1   16[BANK0 ] PTR void [1]
  1189 ;;		 -> ?_sprintf(2), 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2   10[BANK0 ] int 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       3       0       0       0
  1200 ;;      Locals:         0       7       0       0       0
  1201 ;;      Temps:          0       3       0       0       0
  1202 ;;      Totals:         0      13       0       0       0
  1203 ;;Total ram usage:       13 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    2
  1206 ;; This function calls:
  1207 ;;		___lwdiv
  1208 ;;		___lwmod
  1209 ;; This function is called by:
  1210 ;;		_MPU6050_Read
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           
  1215                           ;psect for function _sprintf
  1216  0015                     _sprintf:
  1217                           
  1218                           ;incstack = 0
  1219                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1220                           ;sprintf@sp stored from wreg
  1221  0015  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0016  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0017  00B5               	movwf	sprintf@sp
  1224  0018                     l1647:
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1227  0018  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1228  0019  00AD               	movwf	??_sprintf
  1229  001A  082D               	movf	??_sprintf,w
  1230  001B  00B0               	movwf	sprintf@ap
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1233  001C  28E8               	goto	l1699
  1234  001D                     l1649:
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1237  001D  3025               	movlw	37
  1238  001E  0636               	xorwf	sprintf@c,w
  1239  001F  1903               	btfsc	3,2
  1240  0020  2822               	goto	u1121
  1241  0021  2823               	goto	u1120
  1242  0022                     u1121:
  1243  0022  282F               	goto	l1655
  1244  0023                     u1120:
  1245  0023                     l1651:
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1248  0023  0836               	movf	sprintf@c,w
  1249  0024  00AD               	movwf	??_sprintf
  1250  0025  0835               	movf	sprintf@sp,w
  1251  0026  0084               	movwf	4
  1252  0027  082D               	movf	??_sprintf,w
  1253  0028  1383               	bcf	3,7	;select IRP bank0
  1254  0029  0080               	movwf	0
  1255  002A                     l1653:
  1256  002A  3001               	movlw	1
  1257  002B  00AD               	movwf	??_sprintf
  1258  002C  082D               	movf	??_sprintf,w
  1259  002D  07B5               	addwf	sprintf@sp,f
  1260                           
  1261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1262  002E  28E8               	goto	l1699
  1263  002F                     l1655:
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1266  002F  01B1               	clrf	sprintf@flag
  1267  0030                     l1659:	
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1269                           
  1270  0030  3001               	movlw	1
  1271  0031  07AA               	addwf	sprintf@f,f
  1272  0032  30FF               	movlw	-1
  1273  0033  072A               	addwf	sprintf@f,w
  1274  0034  0084               	movwf	4
  1275  0035  120A  118A  240A  120A  118A  	fcall	stringdir
  1276  003A  00B6               	movwf	sprintf@c
  1277  003B  00AD               	movwf	??_sprintf
  1278  003C  01AE               	clrf	??_sprintf+1
  1279                           
  1280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 1, Range of values is 0 to 0
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte            4     3 (average)
  1286                           ; direct_byte           11     8 (fixed)
  1287                           ; jumptable            260     6 (fixed)
  1288                           ;	Chosen strategy is simple_byte
  1289  003D  082E               	movf	??_sprintf+1,w
  1290  003E  3A00               	xorlw	0	; case 0
  1291  003F  1903               	skipnz
  1292  0040  2842               	goto	l1885
  1293  0041  28E8               	goto	l1699
  1294  0042                     l1885:
  1295                           
  1296                           ; Switch size 1, requested type "simple"
  1297                           ; Number of cases is 3, Range of values is 0 to 105
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte           10     6 (average)
  1301                           ; jumptable            260     6 (fixed)
  1302                           ;	Chosen strategy is simple_byte
  1303  0042  082D               	movf	??_sprintf,w
  1304  0043  3A00               	xorlw	0	; case 0
  1305  0044  1903               	skipnz
  1306  0045  28FA               	goto	l1701
  1307  0046  3A64               	xorlw	100	; case 100
  1308  0047  1903               	skipnz
  1309  0048  284D               	goto	l1661
  1310  0049  3A0D               	xorlw	13	; case 105
  1311  004A  1903               	skipnz
  1312  004B  284D               	goto	l1661
  1313  004C  28E8               	goto	l1699
  1314  004D                     l1661:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1317  004D  0830               	movf	sprintf@ap,w
  1318  004E  0084               	movwf	4
  1319  004F  1383               	bcf	3,7	;select IRP bank0
  1320  0050  0800               	movf	0,w
  1321  0051  00B3               	movwf	sprintf@val
  1322  0052  0A84               	incf	4,f
  1323  0053  0800               	movf	0,w
  1324  0054  00B4               	movwf	sprintf@val+1
  1325  0055                     l1663:
  1326  0055  3002               	movlw	2
  1327  0056  00AD               	movwf	??_sprintf
  1328  0057  082D               	movf	??_sprintf,w
  1329  0058  07B0               	addwf	sprintf@ap,f
  1330  0059                     l1665:
  1331                           
  1332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1333  0059  1FB4               	btfss	sprintf@val+1,7
  1334  005A  285C               	goto	u1131
  1335  005B  285D               	goto	u1130
  1336  005C                     u1131:
  1337  005C  2866               	goto	l1671
  1338  005D                     u1130:
  1339  005D                     l1667:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1342  005D  3003               	movlw	3
  1343  005E  00AD               	movwf	??_sprintf
  1344  005F  082D               	movf	??_sprintf,w
  1345  0060  04B1               	iorwf	sprintf@flag,f
  1346  0061                     l1669:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1349  0061  09B3               	comf	sprintf@val,f
  1350  0062  09B4               	comf	sprintf@val+1,f
  1351  0063  0AB3               	incf	sprintf@val,f
  1352  0064  1903               	skipnz
  1353  0065  0AB4               	incf	sprintf@val+1,f
  1354  0066                     l1671:
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1357  0066  01B6               	clrf	sprintf@c
  1358  0067  0AB6               	incf	sprintf@c,f
  1359  0068                     l1677:
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1362  0068  0836               	movf	sprintf@c,w
  1363  0069  00AD               	movwf	??_sprintf
  1364  006A  072D               	addwf	??_sprintf,w
  1365  006B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1366  006C  0084               	movwf	4
  1367  006D  120A  118A  240A  120A  118A  	fcall	stringdir
  1368  0072  00AE               	movwf	??_sprintf+1
  1369  0073  120A  118A  240A  120A  118A  	fcall	stringdir
  1370  0078  00AF               	movwf	??_sprintf+2
  1371  0079  082F               	movf	??_sprintf+2,w
  1372  007A  0234               	subwf	sprintf@val+1,w
  1373  007B  1D03               	skipz
  1374  007C  287F               	goto	u1145
  1375  007D  082E               	movf	??_sprintf+1,w
  1376  007E  0233               	subwf	sprintf@val,w
  1377  007F                     u1145:
  1378  007F  1803               	skipnc
  1379  0080  2882               	goto	u1141
  1380  0081  2883               	goto	u1140
  1381  0082                     u1141:
  1382  0082  2884               	goto	l1681
  1383  0083                     u1140:
  1384  0083  288E               	goto	l1683
  1385  0084                     l1681:
  1386  0084  3001               	movlw	1
  1387  0085  00AD               	movwf	??_sprintf
  1388  0086  082D               	movf	??_sprintf,w
  1389  0087  07B6               	addwf	sprintf@c,f
  1390  0088  3005               	movlw	5
  1391  0089  0636               	xorwf	sprintf@c,w
  1392  008A  1D03               	btfss	3,2
  1393  008B  288D               	goto	u1151
  1394  008C  288E               	goto	u1150
  1395  008D                     u1151:
  1396  008D  2868               	goto	l1677
  1397  008E                     u1150:
  1398  008E                     l1683:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1401  008E  0831               	movf	sprintf@flag,w
  1402  008F  3903               	andlw	3
  1403  0090  1903               	btfsc	3,2
  1404  0091  2893               	goto	u1161
  1405  0092  2894               	goto	u1160
  1406  0093                     u1161:
  1407  0093  289F               	goto	l1689
  1408  0094                     u1160:
  1409  0094                     l1685:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1412  0094  302D               	movlw	45
  1413  0095  00AD               	movwf	??_sprintf
  1414  0096  0835               	movf	sprintf@sp,w
  1415  0097  0084               	movwf	4
  1416  0098  082D               	movf	??_sprintf,w
  1417  0099  1383               	bcf	3,7	;select IRP bank0
  1418  009A  0080               	movwf	0
  1419  009B                     l1687:
  1420  009B  3001               	movlw	1
  1421  009C  00AD               	movwf	??_sprintf
  1422  009D  082D               	movf	??_sprintf,w
  1423  009E  07B5               	addwf	sprintf@sp,f
  1424  009F                     l1689:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1427  009F  0836               	movf	sprintf@c,w
  1428  00A0  00AD               	movwf	??_sprintf
  1429  00A1  082D               	movf	??_sprintf,w
  1430  00A2  00B2               	movwf	sprintf@prec
  1431                           
  1432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1433  00A3  28DF               	goto	l1697
  1434  00A4                     l1691:
  1435                           
  1436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1437  00A4  300A               	movlw	10
  1438  00A5  00A4               	movwf	___lwmod@divisor
  1439  00A6  3000               	movlw	0
  1440  00A7  00A5               	movwf	___lwmod@divisor+1
  1441  00A8  0832               	movf	sprintf@prec,w
  1442  00A9  00AD               	movwf	??_sprintf
  1443  00AA  072D               	addwf	??_sprintf,w
  1444  00AB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1445  00AC  0084               	movwf	4
  1446  00AD  120A  118A  240A  120A  118A  	fcall	stringdir
  1447  00B2  00F4               	movwf	___lwdiv@divisor
  1448  00B3  120A  118A  240A  120A  118A  	fcall	stringdir
  1449  00B8  00F5               	movwf	___lwdiv@divisor+1
  1450  00B9  0834               	movf	sprintf@val+1,w
  1451  00BA  00F7               	movwf	___lwdiv@dividend+1
  1452  00BB  0833               	movf	sprintf@val,w
  1453  00BC  00F6               	movwf	___lwdiv@dividend
  1454  00BD  120A  118A  22CA  120A  118A  	fcall	___lwdiv
  1455  00C2  0875               	movf	?___lwdiv+1,w
  1456  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1457  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1458  00C5  00A7               	movwf	___lwmod@dividend+1
  1459  00C6  0874               	movf	?___lwdiv,w
  1460  00C7  00A6               	movwf	___lwmod@dividend
  1461  00C8  120A  118A  2310  120A  118A  	fcall	___lwmod
  1462  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1463  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1464  00CF  0824               	movf	?___lwmod,w
  1465  00D0  3E30               	addlw	48
  1466  00D1  00AE               	movwf	??_sprintf+1
  1467  00D2  082E               	movf	??_sprintf+1,w
  1468  00D3  00B6               	movwf	sprintf@c
  1469  00D4                     l1693:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1472  00D4  0836               	movf	sprintf@c,w
  1473  00D5  00AD               	movwf	??_sprintf
  1474  00D6  0835               	movf	sprintf@sp,w
  1475  00D7  0084               	movwf	4
  1476  00D8  082D               	movf	??_sprintf,w
  1477  00D9  1383               	bcf	3,7	;select IRP bank0
  1478  00DA  0080               	movwf	0
  1479  00DB                     l1695:
  1480  00DB  3001               	movlw	1
  1481  00DC  00AD               	movwf	??_sprintf
  1482  00DD  082D               	movf	??_sprintf,w
  1483  00DE  07B5               	addwf	sprintf@sp,f
  1484  00DF                     l1697:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1487  00DF  30FF               	movlw	255
  1488  00E0  00AD               	movwf	??_sprintf
  1489  00E1  082D               	movf	??_sprintf,w
  1490  00E2  07B2               	addwf	sprintf@prec,f
  1491  00E3  0A32               	incf	sprintf@prec,w
  1492  00E4  1D03               	btfss	3,2
  1493  00E5  28E7               	goto	u1171
  1494  00E6  28E8               	goto	u1170
  1495  00E7                     u1171:
  1496  00E7  28A4               	goto	l1691
  1497  00E8                     u1170:
  1498  00E8                     l1699:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1501  00E8  3001               	movlw	1
  1502  00E9  07AA               	addwf	sprintf@f,f
  1503  00EA  30FF               	movlw	-1
  1504  00EB  072A               	addwf	sprintf@f,w
  1505  00EC  0084               	movwf	4
  1506  00ED  120A  118A  240A  120A  118A  	fcall	stringdir
  1507  00F2  00AD               	movwf	??_sprintf
  1508  00F3  082D               	movf	??_sprintf,w
  1509  00F4  00B6               	movwf	sprintf@c
  1510  00F5  0836               	movf	sprintf@c,w
  1511  00F6  1D03               	btfss	3,2
  1512  00F7  28F9               	goto	u1181
  1513  00F8  28FA               	goto	u1180
  1514  00F9                     u1181:
  1515  00F9  281D               	goto	l1649
  1516  00FA                     u1180:
  1517  00FA                     l1701:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1520  00FA  0835               	movf	sprintf@sp,w
  1521  00FB  0084               	movwf	4
  1522  00FC  1383               	bcf	3,7	;select IRP bank0
  1523  00FD  0180               	clrf	0
  1524  00FE                     l323:
  1525  00FE  0008               	return
  1526  00FF                     __end_of_sprintf:
  1527                           
  1528                           	psect	text4
  1529  0310                     __ptext4:	
  1530 ;; *************** function ___lwmod *****************
  1531 ;; Defined at:
  1532 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  divisor         2    4[BANK0 ] unsigned int 
  1535 ;;  dividend        2    6[BANK0 ] unsigned int 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  counter         1    9[BANK0 ] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2    4[BANK0 ] unsigned int 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       4       0       0       0
  1548 ;;      Locals:         0       1       0       0       0
  1549 ;;      Temps:          0       1       0       0       0
  1550 ;;      Totals:         0       6       0       0       0
  1551 ;;Total ram usage:        6 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_sprintf
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function ___lwmod
  1563  0310                     ___lwmod:
  1564  0310                     l1595:	
  1565                           ;incstack = 0
  1566                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1567                           
  1568  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0312  0824               	movf	___lwmod@divisor,w
  1571  0313  0425               	iorwf	___lwmod@divisor+1,w
  1572  0314  1903               	btfsc	3,2
  1573  0315  2B17               	goto	u1021
  1574  0316  2B18               	goto	u1020
  1575  0317                     u1021:
  1576  0317  2B47               	goto	l1613
  1577  0318                     u1020:
  1578  0318                     l1597:
  1579  0318  01A9               	clrf	___lwmod@counter
  1580  0319  0AA9               	incf	___lwmod@counter,f
  1581  031A  2B26               	goto	l1603
  1582  031B                     l1599:
  1583  031B  3001               	movlw	1
  1584  031C                     u1035:
  1585  031C  1003               	clrc
  1586  031D  0DA4               	rlf	___lwmod@divisor,f
  1587  031E  0DA5               	rlf	___lwmod@divisor+1,f
  1588  031F  3EFF               	addlw	-1
  1589  0320  1D03               	skipz
  1590  0321  2B1C               	goto	u1035
  1591  0322                     l1601:
  1592  0322  3001               	movlw	1
  1593  0323  00A8               	movwf	??___lwmod
  1594  0324  0828               	movf	??___lwmod,w
  1595  0325  07A9               	addwf	___lwmod@counter,f
  1596  0326                     l1603:
  1597  0326  1FA5               	btfss	___lwmod@divisor+1,7
  1598  0327  2B29               	goto	u1041
  1599  0328  2B2A               	goto	u1040
  1600  0329                     u1041:
  1601  0329  2B1B               	goto	l1599
  1602  032A                     u1040:
  1603  032A                     l1605:
  1604  032A  0825               	movf	___lwmod@divisor+1,w
  1605  032B  0227               	subwf	___lwmod@dividend+1,w
  1606  032C  1D03               	skipz
  1607  032D  2B30               	goto	u1055
  1608  032E  0824               	movf	___lwmod@divisor,w
  1609  032F  0226               	subwf	___lwmod@dividend,w
  1610  0330                     u1055:
  1611  0330  1C03               	skipc
  1612  0331  2B33               	goto	u1051
  1613  0332  2B34               	goto	u1050
  1614  0333                     u1051:
  1615  0333  2B3A               	goto	l1609
  1616  0334                     u1050:
  1617  0334                     l1607:
  1618  0334  0824               	movf	___lwmod@divisor,w
  1619  0335  02A6               	subwf	___lwmod@dividend,f
  1620  0336  0825               	movf	___lwmod@divisor+1,w
  1621  0337  1C03               	skipc
  1622  0338  03A7               	decf	___lwmod@dividend+1,f
  1623  0339  02A7               	subwf	___lwmod@dividend+1,f
  1624  033A                     l1609:
  1625  033A  3001               	movlw	1
  1626  033B                     u1065:
  1627  033B  1003               	clrc
  1628  033C  0CA5               	rrf	___lwmod@divisor+1,f
  1629  033D  0CA4               	rrf	___lwmod@divisor,f
  1630  033E  3EFF               	addlw	-1
  1631  033F  1D03               	skipz
  1632  0340  2B3B               	goto	u1065
  1633  0341                     l1611:
  1634  0341  3001               	movlw	1
  1635  0342  02A9               	subwf	___lwmod@counter,f
  1636  0343  1D03               	btfss	3,2
  1637  0344  2B46               	goto	u1071
  1638  0345  2B47               	goto	u1070
  1639  0346                     u1071:
  1640  0346  2B2A               	goto	l1605
  1641  0347                     u1070:
  1642  0347                     l1613:
  1643  0347  0827               	movf	___lwmod@dividend+1,w
  1644  0348  00A5               	movwf	?___lwmod+1
  1645  0349  0826               	movf	___lwmod@dividend,w
  1646  034A  00A4               	movwf	?___lwmod
  1647  034B                     l609:
  1648  034B  0008               	return
  1649  034C                     __end_of___lwmod:
  1650                           
  1651                           	psect	text5
  1652  02CA                     __ptext5:	
  1653 ;; *************** function ___lwdiv *****************
  1654 ;; Defined at:
  1655 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  divisor         2    4[COMMON] unsigned int 
  1658 ;;  dividend        2    6[COMMON] unsigned int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  quotient        2    2[BANK0 ] unsigned int 
  1661 ;;  counter         1    1[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2    4[COMMON] unsigned int 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         4       0       0       0       0
  1672 ;;      Locals:         0       3       0       0       0
  1673 ;;      Temps:          0       1       0       0       0
  1674 ;;      Totals:         4       4       0       0       0
  1675 ;;Total ram usage:        8 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_sprintf
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function ___lwdiv
  1687  02CA                     ___lwdiv:
  1688  02CA                     l1569:	
  1689                           ;incstack = 0
  1690                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1691                           
  1692  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1693  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1694  02CC  01A2               	clrf	___lwdiv@quotient
  1695  02CD  01A3               	clrf	___lwdiv@quotient+1
  1696  02CE                     l1571:
  1697  02CE  0874               	movf	___lwdiv@divisor,w
  1698  02CF  0475               	iorwf	___lwdiv@divisor+1,w
  1699  02D0  1903               	btfsc	3,2
  1700  02D1  2AD3               	goto	u951
  1701  02D2  2AD4               	goto	u950
  1702  02D3                     u951:
  1703  02D3  2B0B               	goto	l1591
  1704  02D4                     u950:
  1705  02D4                     l1573:
  1706  02D4  01A1               	clrf	___lwdiv@counter
  1707  02D5  0AA1               	incf	___lwdiv@counter,f
  1708  02D6  2AE2               	goto	l1579
  1709  02D7                     l1575:
  1710  02D7  3001               	movlw	1
  1711  02D8                     u965:
  1712  02D8  1003               	clrc
  1713  02D9  0DF4               	rlf	___lwdiv@divisor,f
  1714  02DA  0DF5               	rlf	___lwdiv@divisor+1,f
  1715  02DB  3EFF               	addlw	-1
  1716  02DC  1D03               	skipz
  1717  02DD  2AD8               	goto	u965
  1718  02DE                     l1577:
  1719  02DE  3001               	movlw	1
  1720  02DF  00A0               	movwf	??___lwdiv
  1721  02E0  0820               	movf	??___lwdiv,w
  1722  02E1  07A1               	addwf	___lwdiv@counter,f
  1723  02E2                     l1579:
  1724  02E2  1FF5               	btfss	___lwdiv@divisor+1,7
  1725  02E3  2AE5               	goto	u971
  1726  02E4  2AE6               	goto	u970
  1727  02E5                     u971:
  1728  02E5  2AD7               	goto	l1575
  1729  02E6                     u970:
  1730  02E6                     l1581:
  1731  02E6  3001               	movlw	1
  1732  02E7                     u985:
  1733  02E7  1003               	clrc
  1734  02E8  0DA2               	rlf	___lwdiv@quotient,f
  1735  02E9  0DA3               	rlf	___lwdiv@quotient+1,f
  1736  02EA  3EFF               	addlw	-1
  1737  02EB  1D03               	skipz
  1738  02EC  2AE7               	goto	u985
  1739  02ED  0875               	movf	___lwdiv@divisor+1,w
  1740  02EE  0277               	subwf	___lwdiv@dividend+1,w
  1741  02EF  1D03               	skipz
  1742  02F0  2AF3               	goto	u995
  1743  02F1  0874               	movf	___lwdiv@divisor,w
  1744  02F2  0276               	subwf	___lwdiv@dividend,w
  1745  02F3                     u995:
  1746  02F3  1C03               	skipc
  1747  02F4  2AF6               	goto	u991
  1748  02F5  2AF7               	goto	u990
  1749  02F6                     u991:
  1750  02F6  2AFE               	goto	l1587
  1751  02F7                     u990:
  1752  02F7                     l1583:
  1753  02F7  0874               	movf	___lwdiv@divisor,w
  1754  02F8  02F6               	subwf	___lwdiv@dividend,f
  1755  02F9  0875               	movf	___lwdiv@divisor+1,w
  1756  02FA  1C03               	skipc
  1757  02FB  03F7               	decf	___lwdiv@dividend+1,f
  1758  02FC  02F7               	subwf	___lwdiv@dividend+1,f
  1759  02FD                     l1585:
  1760  02FD  1422               	bsf	___lwdiv@quotient,0
  1761  02FE                     l1587:
  1762  02FE  3001               	movlw	1
  1763  02FF                     u1005:
  1764  02FF  1003               	clrc
  1765  0300  0CF5               	rrf	___lwdiv@divisor+1,f
  1766  0301  0CF4               	rrf	___lwdiv@divisor,f
  1767  0302  3EFF               	addlw	-1
  1768  0303  1D03               	skipz
  1769  0304  2AFF               	goto	u1005
  1770  0305                     l1589:
  1771  0305  3001               	movlw	1
  1772  0306  02A1               	subwf	___lwdiv@counter,f
  1773  0307  1D03               	btfss	3,2
  1774  0308  2B0A               	goto	u1011
  1775  0309  2B0B               	goto	u1010
  1776  030A                     u1011:
  1777  030A  2AE6               	goto	l1581
  1778  030B                     u1010:
  1779  030B                     l1591:
  1780  030B  0823               	movf	___lwdiv@quotient+1,w
  1781  030C  00F5               	movwf	?___lwdiv+1
  1782  030D  0822               	movf	___lwdiv@quotient,w
  1783  030E  00F4               	movwf	?___lwdiv
  1784  030F                     l599:
  1785  030F  0008               	return
  1786  0310                     __end_of___lwdiv:
  1787                           
  1788                           	psect	text6
  1789  0261                     __ptext6:	
  1790 ;; *************** function ___awdiv *****************
  1791 ;; Defined at:
  1792 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  divisor         2    4[COMMON] int 
  1795 ;;  dividend        2    6[COMMON] int 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  quotient        2    3[BANK0 ] int 
  1798 ;;  sign            1    2[BANK0 ] unsigned char 
  1799 ;;  counter         1    1[BANK0 ] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    4[COMMON] int 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         4       0       0       0       0
  1810 ;;      Locals:         0       4       0       0       0
  1811 ;;      Temps:          0       1       0       0       0
  1812 ;;      Totals:         4       5       0       0       0
  1813 ;;Total ram usage:        9 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_MPU6050_Read
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function ___awdiv
  1825  0261                     ___awdiv:
  1826  0261                     l1709:	
  1827                           ;incstack = 0
  1828                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1829                           
  1830  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0263  01A2               	clrf	___awdiv@sign
  1833  0264                     l1711:
  1834  0264  1FF5               	btfss	___awdiv@divisor+1,7
  1835  0265  2A67               	goto	u1191
  1836  0266  2A68               	goto	u1190
  1837  0267                     u1191:
  1838  0267  2A6F               	goto	l1717
  1839  0268                     u1190:
  1840  0268                     l1713:
  1841  0268  09F4               	comf	___awdiv@divisor,f
  1842  0269  09F5               	comf	___awdiv@divisor+1,f
  1843  026A  0AF4               	incf	___awdiv@divisor,f
  1844  026B  1903               	skipnz
  1845  026C  0AF5               	incf	___awdiv@divisor+1,f
  1846  026D                     l1715:
  1847  026D  01A2               	clrf	___awdiv@sign
  1848  026E  0AA2               	incf	___awdiv@sign,f
  1849  026F                     l1717:
  1850  026F  1FF7               	btfss	___awdiv@dividend+1,7
  1851  0270  2A72               	goto	u1201
  1852  0271  2A73               	goto	u1200
  1853  0272                     u1201:
  1854  0272  2A7C               	goto	l1723
  1855  0273                     u1200:
  1856  0273                     l1719:
  1857  0273  09F6               	comf	___awdiv@dividend,f
  1858  0274  09F7               	comf	___awdiv@dividend+1,f
  1859  0275  0AF6               	incf	___awdiv@dividend,f
  1860  0276  1903               	skipnz
  1861  0277  0AF7               	incf	___awdiv@dividend+1,f
  1862  0278                     l1721:
  1863  0278  3001               	movlw	1
  1864  0279  00A0               	movwf	??___awdiv
  1865  027A  0820               	movf	??___awdiv,w
  1866  027B  06A2               	xorwf	___awdiv@sign,f
  1867  027C                     l1723:
  1868  027C  01A3               	clrf	___awdiv@quotient
  1869  027D  01A4               	clrf	___awdiv@quotient+1
  1870  027E                     l1725:
  1871  027E  0874               	movf	___awdiv@divisor,w
  1872  027F  0475               	iorwf	___awdiv@divisor+1,w
  1873  0280  1903               	btfsc	3,2
  1874  0281  2A83               	goto	u1211
  1875  0282  2A84               	goto	u1210
  1876  0283                     u1211:
  1877  0283  2ABB               	goto	l1745
  1878  0284                     u1210:
  1879  0284                     l1727:
  1880  0284  01A1               	clrf	___awdiv@counter
  1881  0285  0AA1               	incf	___awdiv@counter,f
  1882  0286  2A92               	goto	l1733
  1883  0287                     l1729:
  1884  0287  3001               	movlw	1
  1885  0288                     u1225:
  1886  0288  1003               	clrc
  1887  0289  0DF4               	rlf	___awdiv@divisor,f
  1888  028A  0DF5               	rlf	___awdiv@divisor+1,f
  1889  028B  3EFF               	addlw	-1
  1890  028C  1D03               	skipz
  1891  028D  2A88               	goto	u1225
  1892  028E                     l1731:
  1893  028E  3001               	movlw	1
  1894  028F  00A0               	movwf	??___awdiv
  1895  0290  0820               	movf	??___awdiv,w
  1896  0291  07A1               	addwf	___awdiv@counter,f
  1897  0292                     l1733:
  1898  0292  1FF5               	btfss	___awdiv@divisor+1,7
  1899  0293  2A95               	goto	u1231
  1900  0294  2A96               	goto	u1230
  1901  0295                     u1231:
  1902  0295  2A87               	goto	l1729
  1903  0296                     u1230:
  1904  0296                     l1735:
  1905  0296  3001               	movlw	1
  1906  0297                     u1245:
  1907  0297  1003               	clrc
  1908  0298  0DA3               	rlf	___awdiv@quotient,f
  1909  0299  0DA4               	rlf	___awdiv@quotient+1,f
  1910  029A  3EFF               	addlw	-1
  1911  029B  1D03               	skipz
  1912  029C  2A97               	goto	u1245
  1913  029D  0875               	movf	___awdiv@divisor+1,w
  1914  029E  0277               	subwf	___awdiv@dividend+1,w
  1915  029F  1D03               	skipz
  1916  02A0  2AA3               	goto	u1255
  1917  02A1  0874               	movf	___awdiv@divisor,w
  1918  02A2  0276               	subwf	___awdiv@dividend,w
  1919  02A3                     u1255:
  1920  02A3  1C03               	skipc
  1921  02A4  2AA6               	goto	u1251
  1922  02A5  2AA7               	goto	u1250
  1923  02A6                     u1251:
  1924  02A6  2AAE               	goto	l1741
  1925  02A7                     u1250:
  1926  02A7                     l1737:
  1927  02A7  0874               	movf	___awdiv@divisor,w
  1928  02A8  02F6               	subwf	___awdiv@dividend,f
  1929  02A9  0875               	movf	___awdiv@divisor+1,w
  1930  02AA  1C03               	skipc
  1931  02AB  03F7               	decf	___awdiv@dividend+1,f
  1932  02AC  02F7               	subwf	___awdiv@dividend+1,f
  1933  02AD                     l1739:
  1934  02AD  1423               	bsf	___awdiv@quotient,0
  1935  02AE                     l1741:
  1936  02AE  3001               	movlw	1
  1937  02AF                     u1265:
  1938  02AF  1003               	clrc
  1939  02B0  0CF5               	rrf	___awdiv@divisor+1,f
  1940  02B1  0CF4               	rrf	___awdiv@divisor,f
  1941  02B2  3EFF               	addlw	-1
  1942  02B3  1D03               	skipz
  1943  02B4  2AAF               	goto	u1265
  1944  02B5                     l1743:
  1945  02B5  3001               	movlw	1
  1946  02B6  02A1               	subwf	___awdiv@counter,f
  1947  02B7  1D03               	btfss	3,2
  1948  02B8  2ABA               	goto	u1271
  1949  02B9  2ABB               	goto	u1270
  1950  02BA                     u1271:
  1951  02BA  2A96               	goto	l1735
  1952  02BB                     u1270:
  1953  02BB                     l1745:
  1954  02BB  0822               	movf	___awdiv@sign,w
  1955  02BC  1903               	btfsc	3,2
  1956  02BD  2ABF               	goto	u1281
  1957  02BE  2AC0               	goto	u1280
  1958  02BF                     u1281:
  1959  02BF  2AC5               	goto	l1749
  1960  02C0                     u1280:
  1961  02C0                     l1747:
  1962  02C0  09A3               	comf	___awdiv@quotient,f
  1963  02C1  09A4               	comf	___awdiv@quotient+1,f
  1964  02C2  0AA3               	incf	___awdiv@quotient,f
  1965  02C3  1903               	skipnz
  1966  02C4  0AA4               	incf	___awdiv@quotient+1,f
  1967  02C5                     l1749:
  1968  02C5  0824               	movf	___awdiv@quotient+1,w
  1969  02C6  00F5               	movwf	?___awdiv+1
  1970  02C7  0823               	movf	___awdiv@quotient,w
  1971  02C8  00F4               	movwf	?___awdiv
  1972  02C9                     l480:
  1973  02C9  0008               	return
  1974  02CA                     __end_of___awdiv:
  1975                           
  1976                           	psect	text7
  1977  0382                     __ptext7:	
  1978 ;; *************** function _UART_Write_String *****************
  1979 ;; Defined at:
  1980 ;;		line 34 in file "USART.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  buf             2    5[COMMON] PTR unsigned char 
  1983 ;;		 -> RAM(512), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  i               2    2[BANK0 ] int 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1995 ;;      Params:         2       0       0       0       0
  1996 ;;      Locals:         0       2       0       0       0
  1997 ;;      Temps:          0       2       0       0       0
  1998 ;;      Totals:         2       4       0       0       0
  1999 ;;Total ram usage:        6 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    2
  2002 ;; This function calls:
  2003 ;;		_UART_Write
  2004 ;; This function is called by:
  2005 ;;		_MPU6050_Read
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           
  2010                           ;psect for function _UART_Write_String
  2011  0382                     _UART_Write_String:
  2012  0382                     l1617:	
  2013                           ;incstack = 0
  2014                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2015                           
  2016                           
  2017                           ;USART.c: 34: void UART_Write_String(char* buf);USART.c: 35: {;USART.c: 36:     int i=0;
  2018  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0384  01A2               	clrf	UART_Write_String@i
  2021  0385  01A3               	clrf	UART_Write_String@i+1
  2022                           
  2023                           ;USART.c: 37:     while(buf[i] != '\0')
  2024  0386  2BA2               	goto	l1623
  2025  0387                     l1619:
  2026                           
  2027                           ;USART.c: 38:         UART_Write(buf[i++]);
  2028  0387  0822               	movf	UART_Write_String@i,w
  2029  0388  0775               	addwf	UART_Write_String@buf,w
  2030  0389  00A0               	movwf	??_UART_Write_String
  2031  038A  0823               	movf	UART_Write_String@i+1,w
  2032  038B  1803               	skipnc
  2033  038C  0A23               	incf	UART_Write_String@i+1,w
  2034  038D  0776               	addwf	UART_Write_String@buf+1,w
  2035  038E  00A1               	movwf	??_UART_Write_String+1
  2036  038F  0820               	movf	??_UART_Write_String,w
  2037  0390  0084               	movwf	4
  2038  0391  1783               	bsf	3,7
  2039  0392  1C21               	btfss	??_UART_Write_String+1,0
  2040  0393  1383               	bcf	3,7
  2041  0394  0800               	movf	0,w
  2042  0395  120A  118A  2470  120A  118A  	fcall	_UART_Write
  2043  039A                     l1621:
  2044  039A  3001               	movlw	1
  2045  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2046  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2047  039D  07A2               	addwf	UART_Write_String@i,f
  2048  039E  1803               	skipnc
  2049  039F  0AA3               	incf	UART_Write_String@i+1,f
  2050  03A0  3000               	movlw	0
  2051  03A1  07A3               	addwf	UART_Write_String@i+1,f
  2052  03A2                     l1623:
  2053                           
  2054                           ;USART.c: 37:     while(buf[i] != '\0')
  2055  03A2  0822               	movf	UART_Write_String@i,w
  2056  03A3  0775               	addwf	UART_Write_String@buf,w
  2057  03A4  00A0               	movwf	??_UART_Write_String
  2058  03A5  0823               	movf	UART_Write_String@i+1,w
  2059  03A6  1803               	skipnc
  2060  03A7  0A23               	incf	UART_Write_String@i+1,w
  2061  03A8  0776               	addwf	UART_Write_String@buf+1,w
  2062  03A9  00A1               	movwf	??_UART_Write_String+1
  2063  03AA  0820               	movf	??_UART_Write_String,w
  2064  03AB  0084               	movwf	4
  2065  03AC  1783               	bsf	3,7
  2066  03AD  1C21               	btfss	??_UART_Write_String+1,0
  2067  03AE  1383               	bcf	3,7
  2068  03AF  0800               	movf	0,w
  2069  03B0  1D03               	btfss	3,2
  2070  03B1  2BB3               	goto	u1081
  2071  03B2  2BB4               	goto	u1080
  2072  03B3                     u1081:
  2073  03B3  2B87               	goto	l1619
  2074  03B4                     u1080:
  2075  03B4                     l93:
  2076  03B4  0008               	return
  2077  03B5                     __end_of_UART_Write_String:
  2078                           
  2079                           	psect	text8
  2080  0470                     __ptext8:	
  2081 ;; *************** function _UART_Write *****************
  2082 ;; Defined at:
  2083 ;;		line 28 in file "USART.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  data            1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  data            1    4[COMMON] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         1       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         1       0       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_UART_Write_String
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           
  2112                           ;psect for function _UART_Write
  2113  0470                     _UART_Write:
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _UART_Write: [wreg]
  2117                           ;UART_Write@data stored from wreg
  2118  0470  00F4               	movwf	UART_Write@data
  2119  0471                     l1557:
  2120  0471                     l84:	
  2121                           ;USART.c: 28: void UART_Write(unsigned char data);USART.c: 29: {;USART.c: 30:   while(!T
      +                          RMT);
  2122                           
  2123  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0473  1C98               	btfss	24,1	;volatile
  2126  0474  2C76               	goto	u911
  2127  0475  2C77               	goto	u910
  2128  0476                     u911:
  2129  0476  2C71               	goto	l84
  2130  0477                     u910:
  2131  0477                     l1559:
  2132                           
  2133                           ;USART.c: 31:   TXREG = data;
  2134  0477  0874               	movf	UART_Write@data,w
  2135  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2137  047A  0099               	movwf	25	;volatile
  2138  047B                     l87:
  2139  047B  0008               	return
  2140  047C                     __end_of_UART_Write:
  2141                           
  2142                           	psect	text9
  2143  03E3                     __ptext9:	
  2144 ;; *************** function _I2C_Read *****************
  2145 ;; Defined at:
  2146 ;;		line 87 in file "I2c.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  ACK_NACK        1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  ACK_NACK        1    5[COMMON] unsigned char 
  2151 ;;  Data            1    6[COMMON] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      unsigned char 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         0       0       0       0       0
  2162 ;;      Locals:         2       0       0       0       0
  2163 ;;      Temps:          1       0       0       0       0
  2164 ;;      Totals:         3       0       0       0       0
  2165 ;;Total ram usage:        3 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    2
  2168 ;; This function calls:
  2169 ;;		_I2C_ACK
  2170 ;;		_I2C_NACK
  2171 ;; This function is called by:
  2172 ;;		_MPU6050_Read
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _I2C_Read
  2178  03E3                     _I2C_Read:
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2182                           ;I2C_Read@ACK_NACK stored from wreg
  2183  03E3  00F5               	movwf	I2C_Read@ACK_NACK
  2184  03E4                     l1633:
  2185                           
  2186                           ;I2c.c: 87: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 88: {;I2c.c: 90:     u
      +                          nsigned char Data;;I2c.c: 91:     RCEN = 1;
  2187  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2188  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2189  03E6  1591               	bsf	17,3	;volatile
  2190  03E7                     l205:	
  2191                           ;I2c.c: 92:     while(!BF);
  2192                           
  2193  03E7  1C14               	btfss	20,0	;volatile
  2194  03E8  2BEA               	goto	u1091
  2195  03E9  2BEB               	goto	u1090
  2196  03EA                     u1091:
  2197  03EA  2BE7               	goto	l205
  2198  03EB                     u1090:
  2199  03EB                     l1635:
  2200                           
  2201                           ;I2c.c: 93:     Data = SSPBUF;
  2202  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2203  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2204  03ED  0813               	movf	19,w	;volatile
  2205  03EE  00F4               	movwf	??_I2C_Read
  2206  03EF  0874               	movf	??_I2C_Read,w
  2207  03F0  00F6               	movwf	I2C_Read@Data
  2208  03F1                     l1637:
  2209                           
  2210                           ;I2c.c: 94:     if(ACK_NACK==0)
  2211  03F1  0875               	movf	I2C_Read@ACK_NACK,w
  2212  03F2  1D03               	btfss	3,2
  2213  03F3  2BF5               	goto	u1101
  2214  03F4  2BF6               	goto	u1100
  2215  03F5                     u1101:
  2216  03F5  2BFC               	goto	l1641
  2217  03F6                     u1100:
  2218  03F6                     l1639:
  2219                           
  2220                           ;I2c.c: 95:         I2C_ACK();
  2221  03F6  120A  118A  2485  120A  118A  	fcall	_I2C_ACK
  2222  03FB  2C01               	goto	l210
  2223  03FC                     l1641:
  2224                           
  2225                           ;I2c.c: 97:         I2C_NACK();
  2226  03FC  120A  118A  247C  120A  118A  	fcall	_I2C_NACK
  2227  0401                     l210:
  2228  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0403  1D8C               	btfss	12,3	;volatile
  2231  0404  2C06               	goto	u1111
  2232  0405  2C07               	goto	u1110
  2233  0406                     u1111:
  2234  0406  2C01               	goto	l210
  2235  0407                     u1110:
  2236  0407                     l212:
  2237                           
  2238                           ;I2c.c: 99:     SSPIF=0;
  2239  0407  118C               	bcf	12,3	;volatile
  2240  0408                     l1643:
  2241                           
  2242                           ;I2c.c: 100:     return Data;
  2243  0408  0876               	movf	I2C_Read@Data,w
  2244  0409                     l213:
  2245  0409  0008               	return
  2246  040A                     __end_of_I2C_Read:
  2247                           
  2248                           	psect	text10
  2249  047C                     __ptext10:	
  2250 ;; *************** function _I2C_NACK *****************
  2251 ;; Defined at:
  2252 ;;		line 60 in file "I2c.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		None
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_I2C_Read
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _I2C_NACK
  2282  047C                     _I2C_NACK:
  2283  047C                     l1567:	
  2284                           ;incstack = 0
  2285                           ; Regs used in _I2C_NACK: []
  2286                           
  2287                           
  2288                           ;I2c.c: 62:  ACKDT = 1;
  2289  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2290  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2291  047E  1691               	bsf	17,5	;volatile
  2292                           
  2293                           ;I2c.c: 63:  ACKEN = 1;
  2294  047F  1611               	bsf	17,4	;volatile
  2295  0480                     l187:	
  2296                           ;I2c.c: 64:     while(ACKEN);
  2297                           
  2298  0480  1A11               	btfsc	17,4	;volatile
  2299  0481  2C83               	goto	u941
  2300  0482  2C84               	goto	u940
  2301  0483                     u941:
  2302  0483  2C80               	goto	l187
  2303  0484                     u940:
  2304  0484                     l190:
  2305  0484  0008               	return
  2306  0485                     __end_of_I2C_NACK:
  2307                           
  2308                           	psect	text11
  2309  0485                     __ptext11:	
  2310 ;; *************** function _I2C_ACK *****************
  2311 ;; Defined at:
  2312 ;;		line 53 in file "I2c.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		None
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    1
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_I2C_Read
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function _I2C_ACK
  2342  0485                     _I2C_ACK:
  2343  0485                     l1565:	
  2344                           ;incstack = 0
  2345                           ; Regs used in _I2C_ACK: []
  2346                           
  2347                           
  2348                           ;I2c.c: 55:  ACKDT = 0;
  2349  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2350  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2351  0487  1291               	bcf	17,5	;volatile
  2352                           
  2353                           ;I2c.c: 56:     ACKEN = 1;
  2354  0488  1611               	bsf	17,4	;volatile
  2355  0489                     l181:	
  2356                           ;I2c.c: 57:     while(ACKEN);
  2357                           
  2358  0489  1A11               	btfsc	17,4	;volatile
  2359  048A  2C8C               	goto	u931
  2360  048B  2C8D               	goto	u930
  2361  048C                     u931:
  2362  048C  2C89               	goto	l181
  2363  048D                     u930:
  2364  048D                     l184:
  2365  048D  0008               	return
  2366  048E                     __end_of_I2C_ACK:
  2367                           
  2368                           	psect	text12
  2369  01C2                     __ptext12:	
  2370 ;; *************** function _MPU6050_Init *****************
  2371 ;; Defined at:
  2372 ;;		line 17 in file "MPU.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0
  2388 ;;      Temps:          0       3       0       0       0
  2389 ;;      Totals:         0       3       0       0       0
  2390 ;;Total ram usage:        3 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    4
  2393 ;; This function calls:
  2394 ;;		_I2C_Master_Init
  2395 ;;		_I2C_Master_Stop
  2396 ;;		_I2C_Master_Write
  2397 ;;		_I2C_Start
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _MPU6050_Init
  2405  01C2                     _MPU6050_Init:
  2406  01C2                     l1753:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2409                           
  2410                           
  2411                           ;MPU.c: 20:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2412  01C2  3002               	movlw	2
  2413  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2414  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2415  01C5  00A2               	movwf	??_MPU6050_Init+2
  2416  01C6  3004               	movlw	4
  2417  01C7  00A1               	movwf	??_MPU6050_Init+1
  2418  01C8  30B9               	movlw	185
  2419  01C9  00A0               	movwf	??_MPU6050_Init
  2420  01CA                     u1317:
  2421  01CA  0BA0               	decfsz	??_MPU6050_Init,f
  2422  01CB  29CA               	goto	u1317
  2423  01CC  0BA1               	decfsz	??_MPU6050_Init+1,f
  2424  01CD  29CA               	goto	u1317
  2425  01CE  0BA2               	decfsz	??_MPU6050_Init+2,f
  2426  01CF  29CA               	goto	u1317
  2427  01D0  29D1               	nop2
  2428  01D1                     l1755:
  2429                           
  2430                           ;MPU.c: 21:   I2C_Master_Init();
  2431  01D1  120A  118A  2463  120A  118A  	fcall	_I2C_Master_Init
  2432  01D6                     l1757:
  2433                           
  2434                           ;MPU.c: 24:   I2C_Start(0xD0);
  2435  01D6  30D0               	movlw	208
  2436  01D7  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  2437  01DC                     l1759:
  2438                           
  2439                           ;MPU.c: 25:   I2C_Master_Write(0x19);
  2440  01DC  3019               	movlw	25
  2441  01DD  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2442  01E2                     l1761:
  2443                           
  2444                           ;MPU.c: 26:   I2C_Master_Write(0x07);
  2445  01E2  3007               	movlw	7
  2446  01E3  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2447  01E8                     l1763:
  2448                           
  2449                           ;MPU.c: 27:   I2C_Master_Stop();
  2450  01E8  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  2451  01ED                     l1765:
  2452                           
  2453                           ;MPU.c: 30:   I2C_Start(0xD0);
  2454  01ED  30D0               	movlw	208
  2455  01EE  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  2456  01F3                     l1767:
  2457                           
  2458                           ;MPU.c: 31:   I2C_Master_Write(0x6B);
  2459  01F3  306B               	movlw	107
  2460  01F4  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2461  01F9                     l1769:
  2462                           
  2463                           ;MPU.c: 32:   I2C_Master_Write(0x01);
  2464  01F9  3001               	movlw	1
  2465  01FA  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2466  01FF                     l1771:
  2467                           
  2468                           ;MPU.c: 33:   I2C_Master_Stop();
  2469  01FF  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  2470  0204                     l1773:
  2471                           
  2472                           ;MPU.c: 36:   I2C_Start(0xD0);
  2473  0204  30D0               	movlw	208
  2474  0205  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  2475  020A                     l1775:
  2476                           
  2477                           ;MPU.c: 37:   I2C_Master_Write(0x1A);
  2478  020A  301A               	movlw	26
  2479  020B  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2480  0210                     l1777:
  2481                           
  2482                           ;MPU.c: 38:   I2C_Master_Write(0x00);
  2483  0210  3000               	movlw	0
  2484  0211  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2485  0216                     l1779:
  2486                           
  2487                           ;MPU.c: 39:   I2C_Master_Stop();
  2488  0216  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  2489  021B                     l1781:
  2490                           
  2491                           ;MPU.c: 42:   I2C_Start(0xD0);
  2492  021B  30D0               	movlw	208
  2493  021C  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  2494  0221                     l1783:
  2495                           
  2496                           ;MPU.c: 43:   I2C_Master_Write(0x1C);
  2497  0221  301C               	movlw	28
  2498  0222  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2499  0227                     l1785:
  2500                           
  2501                           ;MPU.c: 44:   I2C_Master_Write(0x00);
  2502  0227  3000               	movlw	0
  2503  0228  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2504  022D                     l1787:
  2505                           
  2506                           ;MPU.c: 45:   I2C_Master_Stop();
  2507  022D  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  2508  0232                     l1789:
  2509                           
  2510                           ;MPU.c: 48:   I2C_Start(0xD0);
  2511  0232  30D0               	movlw	208
  2512  0233  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  2513  0238                     l1791:
  2514                           
  2515                           ;MPU.c: 49:   I2C_Master_Write(0x1B);
  2516  0238  301B               	movlw	27
  2517  0239  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2518  023E                     l1793:
  2519                           
  2520                           ;MPU.c: 50:   I2C_Master_Write(0x18);
  2521  023E  3018               	movlw	24
  2522  023F  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2523  0244                     l1795:
  2524                           
  2525                           ;MPU.c: 51:   I2C_Master_Stop();
  2526  0244  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  2527  0249                     l1797:
  2528                           
  2529                           ;MPU.c: 54:   I2C_Start(0xD0);
  2530  0249  30D0               	movlw	208
  2531  024A  120A  118A  2427  120A  118A  	fcall	_I2C_Start
  2532  024F                     l1799:
  2533                           
  2534                           ;MPU.c: 55:   I2C_Master_Write(0x38);
  2535  024F  3038               	movlw	56
  2536  0250  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2537  0255                     l1801:
  2538                           
  2539                           ;MPU.c: 56:   I2C_Master_Write(0x01);
  2540  0255  3001               	movlw	1
  2541  0256  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2542  025B                     l1803:
  2543                           
  2544                           ;MPU.c: 57:   I2C_Master_Stop();
  2545  025B  120A  118A  248E  120A  118A  	fcall	_I2C_Master_Stop
  2546  0260                     l120:
  2547  0260  0008               	return
  2548  0261                     __end_of_MPU6050_Init:
  2549                           
  2550                           	psect	text13
  2551  0427                     __ptext13:	
  2552 ;; *************** function _I2C_Start *****************
  2553 ;; Defined at:
  2554 ;;		line 34 in file "I2c.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  add             1    wreg     unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  add             1    5[COMMON] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, pclath, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       0       0       0       0
  2569 ;;      Locals:         1       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0
  2571 ;;      Totals:         1       0       0       0       0
  2572 ;;Total ram usage:        1 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    3
  2575 ;; This function calls:
  2576 ;;		_I2C_Master_Wait
  2577 ;;		_I2C_Master_Write
  2578 ;; This function is called by:
  2579 ;;		_MPU6050_Init
  2580 ;;		_MPU6050_Read
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _I2C_Start
  2586  0427                     _I2C_Start:
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2590                           ;I2C_Start@add stored from wreg
  2591  0427  00F5               	movwf	I2C_Start@add
  2592  0428                     l1625:
  2593                           
  2594                           ;I2c.c: 34: void I2C_Start(char add);I2c.c: 35: {;I2c.c: 36:     I2C_Master_Wait();
  2595  0428  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Wait
  2596  042D                     l1627:
  2597                           
  2598                           ;I2c.c: 37:     SEN = 1;
  2599  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2600  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2601  042F  1411               	bsf	17,0	;volatile
  2602                           
  2603                           ;I2c.c: 38:     I2C_Master_Write(add);
  2604  0430  0875               	movf	I2C_Start@add,w
  2605  0431  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Write
  2606  0436                     l172:
  2607  0436  0008               	return
  2608  0437                     __end_of_I2C_Start:
  2609                           
  2610                           	psect	text14
  2611  0437                     __ptext14:	
  2612 ;; *************** function _I2C_Master_Write *****************
  2613 ;; Defined at:
  2614 ;;		line 67 in file "I2c.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  data            1    wreg     unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  data            1    4[COMMON] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      unsigned char 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       0       0       0       0
  2629 ;;      Locals:         1       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0
  2631 ;;      Totals:         1       0       0       0       0
  2632 ;;Total ram usage:        1 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    2
  2635 ;; This function calls:
  2636 ;;		_I2C_Master_Wait
  2637 ;; This function is called by:
  2638 ;;		_MPU6050_Init
  2639 ;;		_MPU6050_Read
  2640 ;;		_I2C_Start
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _I2C_Master_Write
  2646  0437                     _I2C_Master_Write:
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2650                           ;I2C_Master_Write@data stored from wreg
  2651  0437  00F4               	movwf	I2C_Master_Write@data
  2652  0438                     l1561:
  2653                           
  2654                           ;I2c.c: 67: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 68: {;I2c.c: 69:  
      +                             I2C_Master_Wait();
  2655  0438  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Wait
  2656  043D                     l1563:
  2657                           
  2658                           ;I2c.c: 70:     SSPBUF = data;
  2659  043D  0874               	movf	I2C_Master_Write@data,w
  2660  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2661  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0440  0093               	movwf	19	;volatile
  2663  0441                     l193:	
  2664                           ;I2c.c: 71:     while(!SSPIF);
  2665                           
  2666  0441  1D8C               	btfss	12,3	;volatile
  2667  0442  2C44               	goto	u921
  2668  0443  2C45               	goto	u920
  2669  0444                     u921:
  2670  0444  2C41               	goto	l193
  2671  0445                     u920:
  2672  0445                     l195:
  2673                           
  2674                           ;I2c.c: 72:  SSPIF = 0;
  2675  0445  118C               	bcf	12,3	;volatile
  2676  0446                     l196:	
  2677                           ;I2c.c: 73:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2678                           
  2679  0446  0008               	return
  2680  0447                     __end_of_I2C_Master_Write:
  2681                           
  2682                           	psect	text15
  2683  048E                     __ptext15:	
  2684 ;; *************** function _I2C_Master_Stop *****************
  2685 ;; Defined at:
  2686 ;;		line 47 in file "I2c.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0
  2703 ;;      Totals:         0       0       0       0       0
  2704 ;;Total ram usage:        0 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		_I2C_Master_Wait
  2709 ;; This function is called by:
  2710 ;;		_MPU6050_Init
  2711 ;;		_MPU6050_Read
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _I2C_Master_Stop
  2717  048E                     _I2C_Master_Stop:
  2718  048E                     l1629:	
  2719                           ;incstack = 0
  2720                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2721                           
  2722                           
  2723                           ;I2c.c: 49:     I2C_Master_Wait();
  2724  048E  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Wait
  2725  0493                     l1631:
  2726                           
  2727                           ;I2c.c: 50:     PEN = 1;
  2728  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2729  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2730  0495  1511               	bsf	17,2	;volatile
  2731  0496                     l178:
  2732  0496  0008               	return
  2733  0497                     __end_of_I2C_Master_Stop:
  2734                           
  2735                           	psect	text16
  2736  0456                     __ptext16:	
  2737 ;; *************** function _I2C_Master_Wait *****************
  2738 ;; Defined at:
  2739 ;;		line 23 in file "I2c.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_I2C_Start
  2764 ;;		_I2C_Master_Stop
  2765 ;;		_I2C_Master_Write
  2766 ;;		_I2C_Master_Start
  2767 ;;		_I2C_Master_RepeatedStart
  2768 ;;		_I2C_Read_Byte
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           
  2773                           ;psect for function _I2C_Master_Wait
  2774  0456                     _I2C_Master_Wait:
  2775  0456                     l1553:	
  2776                           ;incstack = 0
  2777                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2778                           
  2779  0456                     l163:	
  2780                           ;I2c.c: 25:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2781                           
  2782  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2784  0458  1914               	btfsc	20,2	;volatile
  2785  0459  2C5B               	goto	u891
  2786  045A  2C5C               	goto	u890
  2787  045B                     u891:
  2788  045B  2C56               	goto	l163
  2789  045C                     u890:
  2790  045C                     l1555:
  2791  045C  0811               	movf	17,w	;volatile
  2792  045D  391F               	andlw	31
  2793  045E  1D03               	btfss	3,2
  2794  045F  2C61               	goto	u901
  2795  0460  2C62               	goto	u900
  2796  0461                     u901:
  2797  0461  2C56               	goto	l163
  2798  0462                     u900:
  2799  0462                     l166:
  2800  0462  0008               	return
  2801  0463                     __end_of_I2C_Master_Wait:
  2802                           
  2803                           	psect	text17
  2804  0463                     __ptext17:	
  2805 ;; *************** function _I2C_Master_Init *****************
  2806 ;; Defined at:
  2807 ;;		line 13 in file "I2c.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         0       0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    1
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_MPU6050_Init
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _I2C_Master_Init
  2837  0463                     _I2C_Master_Init:
  2838  0463                     l905:	
  2839                           ;incstack = 0
  2840                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2841                           
  2842                           
  2843                           ;I2c.c: 15:   SSPCON = 0x28;
  2844  0463  3028               	movlw	40
  2845  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0466  0094               	movwf	20	;volatile
  2848  0467                     l907:
  2849                           
  2850                           ;I2c.c: 16:   SSPCON2 = 0x00;
  2851  0467  1683               	bsf	3,5	;RP0=1, select bank1
  2852  0468  1303               	bcf	3,6	;RP1=0, select bank1
  2853  0469  0191               	clrf	17	;volatile
  2854  046A                     l909:
  2855                           
  2856                           ;I2c.c: 17:   SSPSTAT = 0x00;
  2857  046A  0194               	clrf	20	;volatile
  2858                           
  2859                           ;I2c.c: 18:   SSPADD = ((8000000/4)/9600) - 1;
  2860  046B  30CF               	movlw	207
  2861  046C  0093               	movwf	19	;volatile
  2862  046D                     l911:
  2863                           
  2864                           ;I2c.c: 19:   TRISC3 = 1;
  2865  046D  1587               	bsf	7,3	;volatile
  2866  046E                     l913:
  2867                           
  2868                           ;I2c.c: 20:   TRISC4 = 1;
  2869  046E  1607               	bsf	7,4	;volatile
  2870  046F                     l160:
  2871  046F  0008               	return
  2872  0470                     __end_of_I2C_Master_Init:
  2873                           
  2874                           	psect	text18
  2875  0497                     __ptext18:	
  2876 ;; *************** function _INTERRUP *****************
  2877 ;; Defined at:
  2878 ;;		line 81 in file "main.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		None
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           
  2907                           ;psect for function _INTERRUP
  2908  0497                     _INTERRUP:
  2909  0497                     l1043:	
  2910                           ;incstack = 0
  2911                           ; Regs used in _INTERRUP: []
  2912                           
  2913                           
  2914                           ;main.c: 83:     PIE1bits.RCIE = 1;
  2915  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2917  0499  168C               	bsf	12,5	;volatile
  2918                           
  2919                           ;main.c: 84:     PIE1bits.TXIE = 0;
  2920  049A  120C               	bcf	12,4	;volatile
  2921                           
  2922                           ;main.c: 85:     PIR1bits.RCIF = 0;
  2923  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2924  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2925  049D  128C               	bcf	12,5	;volatile
  2926                           
  2927                           ;main.c: 87:     INTCONbits.GIE = 1;
  2928  049E  178B               	bsf	11,7	;volatile
  2929  049F                     l56:	
  2930                           ;main.c: 88:     return;
  2931                           
  2932  049F  0008               	return
  2933  04A0                     __end_of_INTERRUP:
  2934                           
  2935                           	psect	text19
  2936  034C                     __ptext19:	
  2937 ;; *************** function _ISR *****************
  2938 ;; Defined at:
  2939 ;;		line 41 in file "main.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0
  2955 ;;      Temps:          4       0       0       0       0
  2956 ;;      Totals:         4       0       0       0       0
  2957 ;;Total ram usage:        4 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		Interrupt level 1
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _ISR
  2968  034C                     _ISR:
  2969  034C                     i1l1133:
  2970                           
  2971                           ;main.c: 42:     if (PIR1bits.RCIF == 1) {
  2972  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2973  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2974  034E  1E8C               	btfss	12,5	;volatile
  2975  034F  2B51               	goto	u41_21
  2976  0350  2B52               	goto	u41_20
  2977  0351                     u41_21:
  2978  0351  2B5A               	goto	i1l1139
  2979  0352                     u41_20:
  2980  0352                     i1l1135:
  2981                           
  2982                           ;main.c: 43:         PIR1bits.RCIF = 0;
  2983  0352  128C               	bcf	12,5	;volatile
  2984  0353                     i1l1137:
  2985                           
  2986                           ;main.c: 44:         LED = RCREG;
  2987  0353  081A               	movf	26,w	;volatile
  2988  0354  00F0               	movwf	??_ISR
  2989  0355  01F1               	clrf	??_ISR+1
  2990  0356  0870               	movf	??_ISR,w
  2991  0357  00F8               	movwf	_LED
  2992  0358  0871               	movf	??_ISR+1,w
  2993  0359  00F9               	movwf	_LED+1
  2994  035A                     i1l1139:
  2995                           
  2996                           ;main.c: 46:     if (LED == 0X0A) {
  2997  035A  300A               	movlw	10
  2998  035B  0678               	xorwf	_LED,w
  2999  035C  0479               	iorwf	_LED+1,w
  3000  035D  1D03               	btfss	3,2
  3001  035E  2B60               	goto	u42_21
  3002  035F  2B61               	goto	u42_20
  3003  0360                     u42_21:
  3004  0360  2B63               	goto	i1l1143
  3005  0361                     u42_20:
  3006  0361                     i1l1141:
  3007                           
  3008                           ;main.c: 47:         PORTDbits.RD0 == 1;
  3009  0361  0808               	movf	8,w	;volatile
  3010                           
  3011                           ;main.c: 48:     } else if (LED == 0X0B) {
  3012  0362  2B7B               	goto	i1l45
  3013  0363                     i1l1143:
  3014  0363  300B               	movlw	11
  3015  0364  0678               	xorwf	_LED,w
  3016  0365  0479               	iorwf	_LED+1,w
  3017  0366  1D03               	btfss	3,2
  3018  0367  2B69               	goto	u43_21
  3019  0368  2B6A               	goto	u43_20
  3020  0369                     u43_21:
  3021  0369  2B6B               	goto	i1l1147
  3022  036A                     u43_20:
  3023  036A  2B61               	goto	i1l1141
  3024  036B                     i1l1147:
  3025  036B  300C               	movlw	12
  3026  036C  0678               	xorwf	_LED,w
  3027  036D  0479               	iorwf	_LED+1,w
  3028  036E  1D03               	btfss	3,2
  3029  036F  2B71               	goto	u44_21
  3030  0370  2B72               	goto	u44_20
  3031  0371                     u44_21:
  3032  0371  2B73               	goto	i1l1151
  3033  0372                     u44_20:
  3034  0372  2B61               	goto	i1l1141
  3035  0373                     i1l1151:
  3036  0373  300D               	movlw	13
  3037  0374  0678               	xorwf	_LED,w
  3038  0375  0479               	iorwf	_LED+1,w
  3039  0376  1D03               	btfss	3,2
  3040  0377  2B79               	goto	u45_21
  3041  0378  2B7A               	goto	u45_20
  3042  0379                     u45_21:
  3043  0379  2B7B               	goto	i1l39
  3044  037A                     u45_20:
  3045  037A  2B61               	goto	i1l1141
  3046  037B                     i1l39:
  3047  037B                     i1l45:
  3048  037B  0873               	movf	??_ISR+3,w
  3049  037C  008A               	movwf	10
  3050  037D  0E72               	swapf	??_ISR+2,w
  3051  037E  0083               	movwf	3
  3052  037F  0EFE               	swapf	btemp,f
  3053  0380  0E7E               	swapf	btemp,w
  3054  0381  0009               	retfie
  3055  0382                     __end_of_ISR:
  3056  007E                     btemp	set	126	;btemp
  3057  007E                     wtemp0	set	126
  3058                           
  3059                           	psect	intentry
  3060  0004                     __pintentry:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3063                           
  3064  0004                     interrupt_function:
  3065  007E                     saved_w	set	btemp
  3066  0004  00FE               	movwf	btemp
  3067  0005  0E03               	swapf	3,w
  3068  0006  00F2               	movwf	??_ISR+2
  3069  0007  080A               	movf	10,w
  3070  0008  00F3               	movwf	??_ISR+3
  3071  0009  120A  118A  2B4C   	ljmp	_ISR
  3072                           
  3073                           	psect	config
  3074                           
  3075                           ;Config register CONFIG1 @ 0x2007
  3076                           ;	Oscillator Selection bits
  3077                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3078                           ;	Watchdog Timer Enable bit
  3079                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3080                           ;	Power-up Timer Enable bit
  3081                           ;	PWRTE = OFF, PWRT disabled
  3082                           ;	RE3/MCLR pin function select bit
  3083                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3084                           ;	Code Protection bit
  3085                           ;	CP = OFF, Program memory code protection is disabled
  3086                           ;	Data Code Protection bit
  3087                           ;	CPD = OFF, Data memory code protection is disabled
  3088                           ;	Brown Out Reset Selection bits
  3089                           ;	BOREN = OFF, BOR disabled
  3090                           ;	Internal External Switchover bit
  3091                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3092                           ;	Fail-Safe Clock Monitor Enabled bit
  3093                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3094                           ;	Low Voltage Programming Enable bit
  3095                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3096                           ;	In-Circuit Debugger Mode bit
  3097                           ;	DEBUG = 0x1, unprogrammed default
  3098  2007                     	org	8199
  3099  2007  2CD4               	dw	11476
  3100                           
  3101                           ;Config register CONFIG2 @ 0x2008
  3102                           ;	Brown-out Reset Selection bit
  3103                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3104                           ;	Flash Program Memory Self Write Enable bits
  3105                           ;	WRT = OFF, Write protection off
  3106  2008                     	org	8200
  3107  2008  3EFF               	dw	16127

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     29      29
    BANK1            80     54      54
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK1[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _MPU6050_Read->___awdiv
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MPU6050_Read

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2920
                                             27 BANK0      2     2      0
                           _INTERRUP
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0    2827
                                             23 BANK0      4     4      0
                                              0 BANK1     54    54      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1655
                                             10 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    6     4      2     251
                                              5 COMMON     2     0      2
                                              0 BANK0      4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      65
                                              4 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      93
                                              0 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      62
                                              5 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                              4 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUP
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      1D       5       36.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     36      36       7       67.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 16:13:28 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l56 049F                          l81 0455                          l84 0471  
                        l93 03B4                          l87 047B                ___awdiv@sign 0022  
                        fsr 0004  __size_of_UART_Write_String 0033                         l120 0260  
                       l210 0401                         l123 01C1                         l212 0407  
                       l213 0409                         l205 03E7                         l160 046F  
                       l163 0456                         l323 00FE                         l172 0436  
                       l181 0489                         l166 0462                         l190 0484  
                       l184 048D                         l193 0441                         l178 0496  
                       l195 0445                         l187 0480                         l196 0446  
                       l480 02C9                         l609 034B                         l911 046D  
                       l913 046E                         l905 0463                         l907 0467  
                       l909 046A                         l599 030F                         _LED 0078  
                       _RD2 0042                         _PEN 048A                         _ISR 034C  
                       u900 0462                         _SEN 0488                         u901 0461  
                       u910 0477                         u911 0476                         u920 0445  
                       u921 0444                         u930 048D                         u931 048C  
                       u940 0484                         u941 0483                         u950 02D4  
                       u951 02D3                         u890 045C                         u970 02E6  
                       u891 045B                         u971 02E5                         u965 02D8  
                       u990 02F7                         u991 02F6                         u985 02E7  
                       u995 02F3             __end_of_I2C_ACK 048E                         fsr0 0004  
                       indf 0000          MPU6050_Read@buffer 00A0                        ?_ISR 0070  
                      l1043 0497                        l1051 044D                        l1053 0450  
                      l1045 0447                        l1055 0453                        l1047 044A  
                      l1057 0454                        l1049 044C                        l1601 0322  
                      l1611 0341                        l1603 0326                        l1621 039A  
                      l1605 032A                        l1613 0347                        l1701 00FA  
                      l1631 0493                        l1623 03A2                        l1711 0264  
                      l1607 0334                        l1553 0456                        l1561 0438  
                      l1625 0428                        l1801 0255                        l1641 03FC  
                      l1633 03E4                        l1617 0382                        l1721 0278  
                      l1713 0268                        l1609 033A                        l1555 045C  
                      l1563 043D                        l1627 042D                        l1803 025B  
                      l1643 0408                        l1635 03EB                        l1619 0387  
                      l1731 028E                        l1723 027C                        l1715 026D  
                      l1571 02CE                        l1651 0023                        l1811 0145  
                      l1629 048E                        l1565 0485                        l1637 03F1  
                      l1557 0471                        l1741 02AE                        l1733 0292  
                      l1725 027E                        l1717 026F                        l1709 0261  
                      l1581 02E6                        l1573 02D4                        l1661 004D  
                      l1653 002A                        l1821 0181                        l1813 0151  
                      l1805 00FF                        l1567 047C                        l1639 03F6  
                      l1559 0477                        l1743 02B5                        l1735 0296  
                      l1727 0284                        l1719 0273                        l1583 02F7  
                      l1575 02D7                        l1591 030B                        l1671 0066  
                      l1663 0055                        l1655 002F                        l1647 0018  
                      l1823 0186                        l1815 015D                        l1807 0116  
                      l1831 03BF                        l1761 01E2                        l1753 01C2  
                      l1737 02A7                        l1729 0287                        l1745 02BB  
                      l1585 02FD                        l1577 02DE                        l1569 02CA  
                      l1681 0084                        l1665 0059                        l1649 001D  
                      l1825 019D                        l1817 0169                        l1809 0122  
                      l1841 03CC                        l1833 03C2                        l1771 01FF  
                      l1763 01E8                        l1755 01D1                        l1747 02C0  
                      l1739 02AD                        l1587 02FE                        l1579 02E2  
                      l1595 0310                        l1691 00A4                        l1683 008E  
                      l1667 005D                        l1659 0030                        l1819 0175  
                      l1843 03D0                        l1835 03C3                        l1827 03B5  
                      l1781 021B                        l1773 0204                        l1765 01ED  
                      l1757 01D6                        l1749 02C5                        l1589 0305  
                      l1597 0318                        l1693 00D4                        l1685 0094  
                      l1677 0068                        l1669 0061                        l1845 03D5  
                      l1837 03C4                        l1829 03BA                        l1791 0238  
                      l1783 0221                        l1775 020A                        l1767 01F3  
                      l1759 01DC                        l1599 031B                        l1695 00DB  
                      l1687 009B                        l1839 03C7                        l1793 023E  
                      l1785 0227                        l1777 0210                        l1769 01F9  
                      l1697 00DF                        l1689 009F                        l1795 0244  
                      l1787 022D                        l1779 0216                        l1699 00E8  
                      l1797 0249                        l1789 0232                        l1885 0042  
                      l1799 024F                        STR_1 041A                        _BRGH 04C2  
                      u1010 030B                        u1011 030A                        u1100 03F6  
                      u1020 0318                        u1101 03F5                        u1005 02FF  
                      u1021 0317                        u1110 0407                        u1111 0406  
                      u1200 0273                        u1040 032A                        u1120 0023  
                      u1201 0272                        u1041 0329                        u1121 0022  
                      u1210 0284                        u1050 0334                        u1130 005D  
                      u1211 0283                        u1051 0333                        u1035 031C  
                      u1131 005C                        u1140 0083                        u1141 0082  
                      u1230 0296                        u1070 0347                        u1150 008E  
                      u1231 0295                        u1071 0346                        u1055 0330  
                      u1151 008D                        u1080 03B4                        u1160 0094  
                      u1081 03B3                        u1225 0288                        u1065 033B  
                      u1161 0093                        u1145 007F                        u1090 03EB  
                      u1250 02A7                        u1170 00E8                        u1091 03EA  
                      u1251 02A6                        u1171 00E7                        u1307 03DB  
                      u1180 00FA                        u1317 01CA                        u1245 0297  
                      u1181 00F9                        u1270 02BB                        u1190 0268  
                      u1271 02BA                        u1255 02A3                        u1191 0267  
                      u1280 02C0                        u1281 02BF                        u1265 02AF  
                      _RCEN 048B                        _RCIF 0065                        i1l45 037B  
                      i1l39 037B                        _SPEN 00C7                        _RSEN 0489  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
          __end_of_I2C_NACK 0485                        _main 03B5            __end_of_I2C_Read 040A  
                      btemp 007E                        start 000C                       ??_ISR 0070  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
          __end_of_INTERRUP 04A0                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___awdiv 02CA             ___awdiv@divisor 0074  
           __end_of___lwdiv 0310             __end_of___lwmod 034C             ___awdiv@counter 0021  
                     _RCREG 001A                       u41_20 0352                       u41_21 0351  
                     u42_20 0361                       u42_21 0360                       _SPBRG 0099  
                     u43_20 036A                       u43_21 0369                       _PORTB 0006  
                     u44_20 0372                       u44_21 0371                       u45_20 037A  
                     u45_21 0379                       _TRISB 0086                       _TRISD 0088  
                     _SSPIF 0063                       _TXREG 0019                 ?_UART_Write 0070  
             ?_MPU6050_Init 0070               ?_MPU6050_Read 0070             __end_of_dpowers 041A  
         __end_of_I2C_Start 0437                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 00FF              MPU6050_Read@Ay 00D4  
           __initialization 000F                __end_of_main 03E3                   ??_I2C_ACK 0074  
                    ??_main 003B           ?_I2C_Master_Write 0070              ??_MPU6050_Init 0020  
            ??_MPU6050_Read 0037          ??_I2C_Master_Write 0074            ___awdiv@dividend 0076  
                    _ANSELH 0189                      i1l1141 0361                      i1l1133 034C  
                    i1l1151 0373                      i1l1143 0363                      i1l1135 0352  
                    i1l1137 0353                      i1l1147 036B                      i1l1139 035A  
                    _SSPADD 0093                      _TRISC3 043B                      _TRISD2 0442  
                    _TRISC4 043C                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013            I2C_Read@ACK_NACK 0075  
       __size_of_UART_Write 000C                   ??___awdiv 0020                   ??___lwdiv 0020  
                 ??___lwmod 0028            ___awdiv@quotient 0023                   ?_I2C_NACK 0070  
                 ?_I2C_Read 0070                      saved_w 007E                   ??_sprintf 002D  
   __end_of__initialization 0011                   ?_INTERRUP 0070              __pcstackCOMMON 0070  
                ??_I2C_NACK 0074                  ??_I2C_Read 0074                  ??_INTERRUP 0074  
              I2C_Read@Data 0076                  __pmaintext 03B5        __end_of_MPU6050_Init 0261  
      __end_of_MPU6050_Read 01C2                  __pintentry 0004                     _I2C_ACK 0485  
                   _ACKSTAT 048E                ??_UART_Write 0074                     _SSPCON2 0091  
                   _SSPSTAT 0094               ?_UART_TX_Init 0070                  __stringtab 040A  
              I2C_Start@add 0075                   _I2C_Start 0427                     ___awdiv 0261  
        __end_of_UART_Write 047C                     ___lwdiv 02CA                     ___lwmod 0310  
                   __ptext1 0447                     __ptext2 00FF                     __ptext3 0015  
                   __ptext4 0310                     __ptext5 02CA                     __ptext6 0261  
                   __ptext7 0382                     __ptext8 0470                     __ptext9 03E3  
              __size_of_ISR 0036                     _dpowers 0410    __size_of_I2C_Master_Init 000D  
  __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009              ??_UART_TX_Init 0074  
                   _sprintf 0015        end_of_initialization 0011                  ?_I2C_Start 0070  
 __size_of_I2C_Master_Write 0010                   _PORTDbits 0008              UART_Write@data 0074  
         __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027       __size_of_MPU6050_Init 009F  
     __size_of_MPU6050_Read 00C3           __size_of_INTERRUP 0009         start_initialization 000F  
               __end_of_ISR 0382                _MPU6050_Init 01C2                _MPU6050_Read 00FF  
         ??_I2C_Master_Init 0074           ??_I2C_Master_Wait 0074           ??_I2C_Master_Stop 0074  
               ??_I2C_Start 0075        __end_of_UART_TX_Init 0456                    ?_I2C_ACK 0070  
               __pbssCOMMON 0078                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0                 sprintf@flag 0031                 sprintf@prec 0032  
          _I2C_Master_Write 0437            ___lwdiv@dividend 0076                    ?___awdiv 0074  
                  ?___lwdiv 0074                    ?___lwmod 0024        I2C_Master_Write@data 0074  
                 __pstrings 040A                    _I2C_NACK 047C                    _I2C_Read 03E3  
          ___lwdiv@quotient 0022                    ?_sprintf 002A           interrupt_function 0004  
                  _INTERRUP 0497                    _PIE1bits 008C                    _PIR1bits 000C  
          __size_of_I2C_ACK 0009        UART_Write_String@buf 0075                 __stringbase 040F  
     __size_of_UART_TX_Init 000F            __size_of___awdiv 0069            __size_of___lwdiv 0046  
          __size_of___lwmod 003C          __end_of__stringtab 0410           _UART_Write_String 0382  
                sprintf@val 0033             _I2C_Master_Init 0463             _I2C_Master_Wait 0456  
           _I2C_Master_Stop 048E          ?_UART_Write_String 0075             ___lwdiv@divisor 0074  
           ___lwdiv@counter 0021                    __ptext10 047C                    __ptext11 0485  
                  __ptext12 01C2                    __ptext13 0427                    __ptext14 0437  
                  __ptext15 048E                    __ptext16 0456                    __ptext17 0463  
                  __ptext18 0497                    __ptext19 034C            __size_of_sprintf 00EA  
              _UART_TX_Init 0447         ??_UART_Write_String 0020               __size_of_main 002E  
 __end_of_UART_Write_String 03B5    __end_of_I2C_Master_Write 0447                  _INTCONbits 000B  
                  intlevel1 0000                   sprintf@ap 0030                   sprintf@sp 0035  
          ___lwmod@dividend 0026                   stringcode 040A          UART_Write_String@i 0022  
   __end_of_I2C_Master_Init 0470     __end_of_I2C_Master_Wait 0463     __end_of_I2C_Master_Stop 0497  
                  sprintf@c 0036                    sprintf@f 002A             ___lwmod@divisor 0024  
           ___lwmod@counter 0029                    stringdir 040A                    stringtab 040A  
                _UART_Write 0470  
